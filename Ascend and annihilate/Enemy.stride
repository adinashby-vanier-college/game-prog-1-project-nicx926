<?xml version="1.0" encoding="UTF-8"?>
<class name="Enemy" extends="Actor" extends-java="Actor" enable="true" strideversion="1">
    <javadoc xml:space="preserve"/>
    <imports>
        <import target="java.util.*" enable="true"/>
        <import target="greenfoot.*" enable="true"/>
    </imports>
    <implements/>
    <fields/>
    <constructors>
        <constructor access="public" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="turn(Greenfoot.getRandomNumber(360))" expression-java="turn(Greenfoot.getRandomNumber(360))" enable="true"/>
            </body>
        </constructor>
    </constructors>
    <methods>
        <method access="public" type="void" type-java="void" name="act" enable="true">
            <javadoc xml:space="preserve">Act - do whatever the Enemy wants to do. This method is called whenever the 'Act' or 'Run' button gets pressed in the environment.</javadoc>
            <params/>
            <throws/>
            <body>
                <call expression="moveAround()" expression-java="moveAround()" enable="true"/>
                <call expression="lookForPlayer()" expression-java="lookForPlayer()" enable="true"/>
                <call expression="manageCooldown()" expression-java="manageCooldown()" enable="true"/>
                <if condition="isGameOver()" condition-java="isGameOver()" enable="true">
                    <ifStatements>
                        <call expression="transitionToGameOverWorld()" expression-java="transitionToGameOverWorld()" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="moveAround" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <call expression="move(1)" expression-java="move(1)" enable="true"/>
                <variable type="int" type-java="int" name="dx" value="0" value-java="0" enable="true"/>
                <variable type="int" type-java="int" name="dy" value="0" value-java="0" enable="true"/>
                <if condition="(Greenfoot.getRandomNumber(10)==1)" condition-java="(Greenfoot.getRandomNumber(10) == 1)" enable="true">
                    <ifStatements>
                        <call expression="turn(Greenfoot.getRandomNumber(90)-45)" expression-java="turn(Greenfoot.getRandomNumber(90) - 45)" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="isAtEdge()" condition-java="isAtEdge()" enable="true">
                    <ifStatements>
                        <call expression="turn(180)" expression-java="turn(180)" enable="true"/>
                    </ifStatements>
                </if>
                <variable type="int" type-java="int" name="newX" value="getX()+dx" value-java="getX() + dx" enable="true"/>
                <variable type="int" type-java="int" name="newY" value="getY()+dy" value-java="getY() + dy" enable="true"/>
                <call expression="setLocation(newX,newY)" expression-java="setLocation(newX, newY)" enable="true"/>
                <if condition="isTouching(Wall.class)" condition-java="isTouching(Wall.class)" enable="true">
                    <ifStatements>
                        <comment xml:space="preserve">If touching a wall, revert back to the original position</comment>
                        <call expression="setLocation(getX()-dx,getY()-dy)" expression-java="setLocation(getX() - dx, getY() - dy)" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="lookForPlayer" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="Player" type-java="Player" name="player" value="(Player)getWorld().getObjects(Player.class).get(0)" value-java="(Player)getWorld().getObjects(Player.class).get(0)" enable="true"/>
                <if condition="player!=null&amp;&amp;withinRange(player,200)" condition-java="player != null &amp;&amp; withinRange(player, 200)" enable="true">
                    <ifStatements>
                        <call expression="turnTowards(player.getX(),player.getY())" expression-java="turnTowards(player.getX(), player.getY())" enable="true"/>
                        <call expression="shootBullet()" expression-java="shootBullet()" enable="true"/>
                    </ifStatements>
                </if>
            </body>
        </method>
        <method access="public" type="boolean" type-java="boolean" name="withinRange" enable="true">
            <javadoc xml:space="preserve"/>
            <params>
                <params type="Player" type-java="Player" name="player"/>
                <params type="int" type-java="int" name="range"/>
            </params>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="distance" value="(int)Math.hypot(getX()-player.getX(),getY()-player.getY())" value-java="(int)Math.hypot(getX() - player.getX(), getY() - player.getY())" enable="true"/>
                <return value="distance&lt;=range" value-java="distance &lt;= range" enable="true"/>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="shootBullet" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="shootCooldown" value="0" value-java="0" enable="true"/>
                <variable type="int" type-java="int" name="reloadTime" value="100" value-java="100" enable="true"/>
                <variable type="int" type-java="int" name="burstShotsLeft" value="3" value-java="3" enable="true"/>
                <if condition="shootCooldown==0" condition-java="shootCooldown == 0" enable="true">
                    <ifStatements>
                        <variable type="Bullet" type-java="Bullet" name="bullet" value="new Bullet()" value-java=" new Bullet()" enable="true"/>
                        <call expression="getWorld().addObject(bullet,getX(),getY())" expression-java="getWorld().addObject(bullet, getX(), getY())" enable="true"/>
                        <call expression="bullet.setRotation(getRotation())" expression-java="bullet.setRotation(getRotation())" enable="true"/>
                        <assign dest="shootCooldown" dest-java="shootCooldown" src="50" src-java="50" enable="true"/>
                        <assign dest="burstShotsLeft" dest-java="burstShotsLeft" src="burstShotsLeft-1" src-java="burstShotsLeft - 1" enable="true"/>
                    </ifStatements>
                    <else>
                        <if condition="burstShotsLeft==0" condition-java="burstShotsLeft == 0" enable="true">
                            <ifStatements>
                                <assign dest="reloadTime" dest-java="reloadTime" src="100" src-java="100" enable="true"/>
                                <assign dest="burstShotsLeft" dest-java="burstShotsLeft" src="3" src-java="3" enable="true"/>
                            </ifStatements>
                        </if>
                    </else>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="manageCooldown" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="int" type-java="int" name="shootCooldown" value="0" value-java="0" enable="true"/>
                <variable type="int" type-java="int" name="reloadTime" value="100" value-java="100" enable="true"/>
                <variable type="int" type-java="int" name="burstShotsLeft" value="3" value-java="3" enable="true"/>
                <if condition="shootCooldown&gt;0" condition-java="shootCooldown &gt; 0" enable="true">
                    <ifStatements>
                        <assign dest="shootCooldown" dest-java="shootCooldown" src="shootCooldown-1" src-java="shootCooldown - 1" enable="true"/>
                    </ifStatements>
                </if>
                <if condition="reloadTime&gt;0" condition-java="reloadTime &gt; 0" enable="true">
                    <ifStatements>
                        <assign dest="reloadTime" dest-java="reloadTime" src="reloadTime-1" src-java="reloadTime - 1" enable="true"/>
                    </ifStatements>
                    <else>
                        <if condition="reloadTime==0&amp;&amp;burstShotsLeft==0" condition-java="reloadTime == 0 &amp;&amp; burstShotsLeft == 0" enable="true">
                            <ifStatements>
                                <assign dest="burstShotsLeft" dest-java="burstShotsLeft" src="3" src-java="3" enable="true"/>
                            </ifStatements>
                        </if>
                    </else>
                </if>
            </body>
        </method>
        <method access="public" type="boolean" type-java="boolean" name="isGameOver" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="world" value="getWorld()" value-java="getWorld()" enable="true"/>
                <if condition="world.getObjects(Player.class).isEmpty()" condition-java="world.getObjects(Player.class).isEmpty()" enable="true">
                    <ifStatements>
                        <return value="true" value-java="true" enable="true"/>
                    </ifStatements>
                    <else>
                        <return value="false" value-java="false" enable="true"/>
                    </else>
                </if>
            </body>
        </method>
        <method access="public" type="void" type-java="void" name="transitionToGameOverWorld" enable="true">
            <javadoc xml:space="preserve"/>
            <params/>
            <throws/>
            <body>
                <variable type="World" type-java="World" name="GameOverWorld" value="new GameOverWorld()" value-java=" new GameOverWorld()" enable="true"/>
                <call expression="Greenfoot.setWorld(GameOverWorld)" expression-java="Greenfoot.setWorld(GameOverWorld)" enable="true"/>
            </body>
        </method>
    </methods>
</class>
